<% content_for :body_classes, "mirrors" %>

<section class="mirrors__hero" style="background-image: url('<%= image_path "mirror.jpg" %>');">
  <div class="hero__container">
    <div class="hero__content">
      <h1>Bygg dina egna magiska spegel för att underlätta dialogen på hemmaplan</h1>
    </div>
  </div>
</section>

<section class="mirrors__container">
  <aside class="mirrors__sidebar">
    <h2>Detta använde vi:</h2>
    <ul>
      <li>Raspberry Pi 3</li>
      <li>Asus Vn247h 23,6 bildskärm</li>
      <li>HDMI-kabel </li>
      <li>8 GB Micro SD med SD-adapter</li>
      <li>Raspbian</li>
      <li>Chromium Browser</li>
    </ul>

    <a href="https://github.com/kollegorna/badrumsbekannelser" class="button button--orange">Ladda hem koden</a>

    <%= render 'shared/sharing_links' %>
  </aside>

  <main class="mirrors__main">
    <p>Att bygga en egen magisk spegel kräver ett visst mått av fokus och tålmodighet men är inte alls svårt. Känner du att din familj skulle må bra av lite hjälp på traven i er vardagsdialog kan det vara en god idé att göra den magiska spegeln till ett sommarprojekt för hela familjen. </p>

    <h3>Så här byggde vi spegeln</h3>
    <p>Spegeln är designad så att den står plant lutad mot en vägg med ett vinklat stativ. Själva möbeln består av ett hölje i MDF som innesluter skärmen, Raspberry Pi:en och alla kablar. Framtill limmas en spegel (en så kallad spionspegel eller 2-way mirror) fast på en ramlös konstruktion. Stativet till spegelenheten är svetsad i fyrkantsrör i stål (25x15mm). Stativet har gummifötter för att öka friktionen mot golvet. Hela möbeln är vitlackerad. Ut ur spegeln går en 5 meter lång kabel som pluggas in i Raspberry Pi:en. På baksidan gör du ett fingerstort hål så att du enkelt kan komma åt att starta skärmen. Det går också att välja en alternativ placering och fästa spegeln på väggen genom att skruva fast gavlar.</p>

    <h3>Så här gör du spegeln magisk</h3>

    <p>Bakom varje spegel sitter en Raspberry PI 3 och en bildskärm. På Raspberry Pi:en kör vi Raspbian som vi anpassat för att fungera väl i speglarna. Som webbläsare används Chromium Browser. Lösningen för spegelns webbsida, adminverktyget samt denna webbplats är gjord med Ruby on Rails. Vi använder Pusher för att uppdatera speglarna i realtid. Allt driftas på Heroku med CloudFlare framför som CDN. Postgres och Redis används för att lagra respektive cacha data.</p>
  </main>
</section>
